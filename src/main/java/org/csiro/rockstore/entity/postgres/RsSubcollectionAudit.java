package org.csiro.rockstore.entity.postgres;

// Generated 12/08/2015 3:14:54 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * RsSubcollection generated by hbm2java
 */
@Entity
@Table(name = "rs_subcollection_audit")
@NamedQueries({
	@NamedQuery(
			name="RsSubcollectionAudit.findSubCollectionById",
		    query="SELECT c FROM RsSubcollectionAudit c WHERE c.subcollectionId = :subcollectionId"
	)
})	
public class RsSubcollectionAudit implements java.io.Serializable {

	private int id;
	private String collectionId;
	private String oldId;
	private String subcollectionId;
	private String igsn;
	private String locationInStorage;	
	private String storageType;
	private Boolean hazardous;
	private String source;
	private Integer totalPallet;	
	private int version;
	private String lastUpdateUser;
	private String previousPalletId;
	private boolean disposedInsufficientInfo;	
	private String operation;
	private Date auditTimestamp;

	private SampleRangeBySubcollection sampleRangeBySubcollection;

	public RsSubcollectionAudit() {
	}


	
	@Column(name = "id",updatable=false, nullable = false)	
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "collection_id",updatable=false, nullable = false)	
	public String getCollectionId() {
		return this.collectionId;
	}
	

	public String setCollectionId(String collectionId) {
		return this.collectionId = collectionId;
	}
	
	@Column(name = "old_id", length = 100)
	public String getOldId() {
		return this.oldId;
	}

	public void setOldId(String oldId) {
		this.oldId = oldId;
	}
	
	@Column(insertable=false,updatable=false, name = "igsn", length = 50)
	@Generated(GenerationTime.INSERT)
	public String getIgsn() {
		return this.igsn;
	}
	
	public String setIgsn(String igsn) {
		return this.igsn = igsn;
	}
	

	@Column(insertable=false,updatable=false, name = "subcollection_id", length = 100)
	@Generated(GenerationTime.INSERT)
	public String getSubcollectionId() {
		return this.subcollectionId;
	}

	public void setSubcollectionId(String subcollectionId) {
		this.subcollectionId = subcollectionId;
	}

	@Column(name = "location_in_storage", length = 100)
	public String getLocationInStorage() {
		return this.locationInStorage;
	}

	public void setLocationInStorage(String locationInStorage) {
		this.locationInStorage = locationInStorage;
	}
	
	@Column(name = "storage_type", length = 100)
	public String getStorageType() {
		return this.storageType;
	}

	public void setStorageType(String storageType) {
		this.storageType = storageType;
	}

	@Column(name = "hazardous")
	public Boolean getHazardous() {
		return this.hazardous;
	}

	public void setHazardous(Boolean hazardous) {
		this.hazardous = hazardous;
	}

	@Column(name = "source", length = 200)
	public String getSource() {
		return this.source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	@Column(name = "total_pallet")
	public Integer getTotalPallet() {
		return this.totalPallet;
	}

	public void setTotalPallet(Integer totalPallet) {
		this.totalPallet = totalPallet;
	}
	
	
	
	@Id
	@Column(name = "version")
	public int getVersion() {
		return this.version;
	}
		
	public int setVersion(int version) {
		return this.version= version;
	}
	
	@Column(name = "last_update_user")	
	public String getLastUpdateUser() {
		return this.lastUpdateUser;
	}
	
	public String setLastUpdateUser(String lastUpdateUser) {
		return this.lastUpdateUser = lastUpdateUser;
	}
	
	@Column(name = "previous_pallet_id")
	public String getPreviousPalletId() {
		return this.previousPalletId;
	}
	
	public void setPreviousPalletId(String previousPalletId) {
		 this.previousPalletId = previousPalletId;
	}
	
	@Column(name = "disposed_insufficient_info")
	public boolean getDisposedInsufficientInfo() {
		return this.disposedInsufficientInfo;
	}
	
	public void setDisposedInsufficientInfo(boolean disposedInsufficientInfo) {
		 this.disposedInsufficientInfo = disposedInsufficientInfo;
	}
	
	
	@Column(name = "operation")	
	public String getOperation() {
		return this.operation;
	}
	
	public String setOperation(String operation) {
		return this.operation = operation;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "audit_timestamp", length = 29)	
	public Date getAuditTimestamp() {
		return this.auditTimestamp;
	}
	
	public Date setAuditTimestamp(Date auditTimestamp) {
		return this.auditTimestamp = auditTimestamp;
	}
	
	

}
