package org.csiro.rockstore.entity.postgres;

// Generated 12/08/2015 3:14:54 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * RsCollection generated by hbm2java
 */
@Entity
@Table(name = "checkout_registry")
@NamedQueries({
	@NamedQuery(
			name="CheckoutRegistry.findCheckoutRegistryBySubcollectionId",
		    query="SELECT c FROM CheckoutRegistry c WHERE c.subcollectionId = :subcollectionId"
	),
	@NamedQuery(
			name="CheckoutRegistry.findCheckoutRegistryById",
		    query="SELECT c FROM CheckoutRegistry c WHERE c.id = :id"
	),
	@NamedQuery(
			name="CheckoutRegistry.findPendingCheckouts",
		    query="SELECT c FROM CheckoutRegistry c WHERE c.dateCheckin = null"
	)	
			
})	
public class CheckoutRegistry implements java.io.Serializable {

	private int id;
	private String subcollectionId;	
	private String staffIdent;
	private String email;
	private String name;
	private Date dateCheckout;
	private Date dateDueback;
	private Boolean checkoutStatus;
	private Date dateCheckin;
	private String checkoutby;
	private String checkinby;
	
	public CheckoutRegistry(){
		
	}
	
	
	public CheckoutRegistry(String subcollectionId, String staffIdent, String email, String name, 
			Date dateCheckout, Date dateDueback, boolean checkoutStatus, Date dateCheckin) {				
		this.setSubcollectionId(subcollectionId);
		this.setStaffIdent(staffIdent);
		this.setEmail(email);
		this.setName(name);
		this.setDateCheckout(dateCheckout);
		this.setDateDueback(dateDueback);
		this.setCheckoutStatus(checkoutStatus);
		this.setDateCheckin(dateCheckin);
	}
	
			
	@Id
	@Column(name = "id",updatable=false, unique = true, nullable = false)
	@SequenceGenerator(name="checkout_registry_id_seq",sequenceName="checkout_registry_id_seq", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE,generator="checkout_registry_id_seq")
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}


	@Column(name = "subcollection_id", length = 50)
	public String getSubcollectionId() {
		return subcollectionId;
	}



	public void setSubcollectionId(String subcollectionId) {
		this.subcollectionId = subcollectionId;
	}


	@Column(name = "staff_ident", length = 30)
	public String getStaffIdent() {
		return staffIdent;
	}



	public void setStaffIdent(String staffIdent) {
		this.staffIdent = staffIdent;
	}


	@Column(name = "email", length = 150)
	public String getEmail() {
		return email;
	}



	public void setEmail(String email) {
		this.email = email;
	}


	@Column(name = "name", length = 150)
	public String getName() {
		return name;
	}



	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_checkout", length = 29)
	public Date getDateCheckout() {
		return dateCheckout;
	}


	public void setDateCheckout(Date dateCheckout) {
		this.dateCheckout = dateCheckout;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_dueback", length = 29)
	public Date getDateDueback() {
		return dateDueback;
	}


	public void setDateDueback(Date dateDueback) {
		this.dateDueback = dateDueback;
	}

	@Column(name = "checkout_status")
	public Boolean getCheckoutStatus() {
		return checkoutStatus;
	}


	public void setCheckoutStatus(Boolean checkoutStatus) {
		this.checkoutStatus = checkoutStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_checkin", length = 29)
	public Date getDateCheckin() {
		return dateCheckin;
	}


	public void setDateCheckin(Date dateCheckin) {
		this.dateCheckin = dateCheckin;
	}

	@Column(name = "checkoutby")
	public String getCheckoutby() {
		return checkoutby;
	}


	public void setCheckoutby(String checkoutby) {
		this.checkoutby = checkoutby;
	}

	@Column(name = "checkinby")
	public String getCheckinby() {
		return checkinby;
	}


	public void setCheckinby(String checkinby) {
		this.checkinby = checkinby;
	}





	



}
